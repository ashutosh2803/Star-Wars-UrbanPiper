{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Desktop/Star-Wars---UrbanPiper/src/pages/Person/Person.js\";\nimport React from 'react';\nimport { useParams } from 'react-router';\nimport { getPerson } from '../../utils/starApi';\nimport './index.css';\nimport { VscLoading } from \"react-icons/vsc\";\n\nfunction Person() {\n  const id = useParams();\n  const [person, setPerson] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(false);\n  React.useEffect(() => {\n    requestPerson();\n  }, [id]);\n\n  const requestPerson = async () => {\n    setIsLoading(true);\n\n    try {\n      setPerson(await getPerson(id));\n    } catch (err) {\n      console.log(err);\n    }\n\n    setIsLoading(false);\n  };\n\n  return isLoading ? /*#__PURE__*/React.createElement(VscLoading, {\n    color: \"yellow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 22\n    }\n  }) : person && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"person\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, person.name);\n}\n\nexport default Person;","map":{"version":3,"sources":["/home/ubuntu/Desktop/Star-Wars---UrbanPiper/src/pages/Person/Person.js"],"names":["React","useParams","getPerson","VscLoading","Person","id","person","setPerson","useState","isLoading","setIsLoading","useEffect","requestPerson","err","console","log","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,OAAO,aAAP;AACA,SAASC,UAAT,QAA2B,iBAA3B;;AAEA,SAASC,MAAT,GAAkB;AAChB,QAAMC,EAAE,GAAGJ,SAAS,EAApB;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBP,KAAK,CAACQ,QAAN,CAAe,EAAf,CAA5B;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,KAAK,CAACQ,QAAN,CAAe,KAAf,CAAlC;AAEAR,EAAAA,KAAK,CAACW,SAAN,CAAgB,MAAM;AACpBC,IAAAA,aAAa;AACd,GAFD,EAEG,CAACP,EAAD,CAFH;;AAIA,QAAMO,aAAa,GAAG,YAAY;AAChCF,IAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,QAAI;AACDH,MAAAA,SAAS,CAAC,MAAML,SAAS,CAACG,EAAD,CAAhB,CAAT;AACF,KAFD,CAEE,OAAOQ,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;;AACDH,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GARD;;AAUA,SAAOD,SAAS,gBAAG,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GACdH,MAAM,iBACJ;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,MAAM,CAACU,IADV,CAFJ;AAMD;;AAED,eAAeZ,MAAf","sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router';\nimport { getPerson } from '../../utils/starApi';\nimport './index.css';\nimport { VscLoading } from \"react-icons/vsc\";\n\nfunction Person() {\n  const id = useParams();\n  const [person, setPerson] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(false);\n  \n  React.useEffect(() => {\n    requestPerson();\n  }, [id]);\n\n  const requestPerson = async () => {\n    setIsLoading(true);\n    try {\n       setPerson(await getPerson(id));\n    } catch (err) {\n      console.log(err);\n    }\n    setIsLoading(false);\n  }\n\n  return isLoading ? <VscLoading color=\"yellow\"/> : (\n    person && \n      <div className=\"person\">\n        {person.name}\n      </div>\n  );\n}\n\nexport default Person;\n"]},"metadata":{},"sourceType":"module"}